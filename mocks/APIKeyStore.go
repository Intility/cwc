// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// APIKeyStore is an autogenerated mock type for the APIKeyStore type
type APIKeyStore struct {
	mock.Mock
}

type APIKeyStore_Expecter struct {
	mock *mock.Mock
}

func (_m *APIKeyStore) EXPECT() *APIKeyStore_Expecter {
	return &APIKeyStore_Expecter{mock: &_m.Mock}
}

// ClearAPIKey provides a mock function with given fields:
func (_m *APIKeyStore) ClearAPIKey() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ClearAPIKey")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// APIKeyStore_ClearAPIKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ClearAPIKey'
type APIKeyStore_ClearAPIKey_Call struct {
	*mock.Call
}

// ClearAPIKey is a helper method to define mock.On call
func (_e *APIKeyStore_Expecter) ClearAPIKey() *APIKeyStore_ClearAPIKey_Call {
	return &APIKeyStore_ClearAPIKey_Call{Call: _e.mock.On("ClearAPIKey")}
}

func (_c *APIKeyStore_ClearAPIKey_Call) Run(run func()) *APIKeyStore_ClearAPIKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *APIKeyStore_ClearAPIKey_Call) Return(_a0 error) *APIKeyStore_ClearAPIKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *APIKeyStore_ClearAPIKey_Call) RunAndReturn(run func() error) *APIKeyStore_ClearAPIKey_Call {
	_c.Call.Return(run)
	return _c
}

// GetAPIKey provides a mock function with given fields:
func (_m *APIKeyStore) GetAPIKey() (string, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAPIKey")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func() (string, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// APIKeyStore_GetAPIKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAPIKey'
type APIKeyStore_GetAPIKey_Call struct {
	*mock.Call
}

// GetAPIKey is a helper method to define mock.On call
func (_e *APIKeyStore_Expecter) GetAPIKey() *APIKeyStore_GetAPIKey_Call {
	return &APIKeyStore_GetAPIKey_Call{Call: _e.mock.On("GetAPIKey")}
}

func (_c *APIKeyStore_GetAPIKey_Call) Run(run func()) *APIKeyStore_GetAPIKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *APIKeyStore_GetAPIKey_Call) Return(_a0 string, _a1 error) *APIKeyStore_GetAPIKey_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *APIKeyStore_GetAPIKey_Call) RunAndReturn(run func() (string, error)) *APIKeyStore_GetAPIKey_Call {
	_c.Call.Return(run)
	return _c
}

// SetAPIKey provides a mock function with given fields: apiKey
func (_m *APIKeyStore) SetAPIKey(apiKey string) error {
	ret := _m.Called(apiKey)

	if len(ret) == 0 {
		panic("no return value specified for SetAPIKey")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(apiKey)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// APIKeyStore_SetAPIKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetAPIKey'
type APIKeyStore_SetAPIKey_Call struct {
	*mock.Call
}

// SetAPIKey is a helper method to define mock.On call
//   - apiKey string
func (_e *APIKeyStore_Expecter) SetAPIKey(apiKey interface{}) *APIKeyStore_SetAPIKey_Call {
	return &APIKeyStore_SetAPIKey_Call{Call: _e.mock.On("SetAPIKey", apiKey)}
}

func (_c *APIKeyStore_SetAPIKey_Call) Run(run func(apiKey string)) *APIKeyStore_SetAPIKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *APIKeyStore_SetAPIKey_Call) Return(_a0 error) *APIKeyStore_SetAPIKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *APIKeyStore_SetAPIKey_Call) RunAndReturn(run func(string) error) *APIKeyStore_SetAPIKey_Call {
	_c.Call.Return(run)
	return _c
}

// NewAPIKeyStore creates a new instance of APIKeyStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAPIKeyStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *APIKeyStore {
	mock := &APIKeyStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
